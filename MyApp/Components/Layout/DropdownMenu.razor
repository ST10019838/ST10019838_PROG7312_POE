@using MyApp.Components.UI
@using MyApp.Components.Forms
@using MyApp.Models
@using TailwindMerge
@inject NavigationManager Nav
@inject TwMerge Tw
@implements IDisposable
@inject StateContainer StateContainer



<button @onclick=ShowMenu class="max-w-max rounded-md border border-gray-200 bg-white p-1 px-4 py-1 opacity-75 hover:bg-gray-200">
    <svg xmlns="http://www.w3.org/2000/svg"
         viewBox="0 0 24 24" fill="none"
         stroke="currentColor" stroke-width="2"
         stroke-linecap="round" stroke-linejoin="round"
         class="lucide lucide-menu size-8">
        <line x1="4" x2="20" y1="12" y2="12" />
        <line x1="4" x2="20" y1="6" y2="6" />
        <line x1="4" x2="20" y1="18" y2="18" />
    </svg>
</button>


@if (IsMenuVisible)
{
    <div class="absolute top-0 w-full">
        <!-- The following class was adapted from a codesandbox
            Author: HaukunShen
            Link: https://codesandbox.io/p/sandbox/tailwind-collapsible-transition-max-height-0kojoc?file=%2Findex.html
        -->
        <ul class=@Tw.Merge("space-y-1 rounded-2xl border-b border-gray-200 sticky top-0 p-3 shadow-xl duration-200 w-full bg-white", IsMenuVisible ? "max-h-max" :"max-h-0")>
            <li class="flex w-full items-center justify-between">
                <div class="inline-flex size-16 items-center justify-center">
                    <span class="grid size-10 place-content-center rounded-lg bg-gray-100 text-xs text-gray-600">
                        L
                    </span>
                </div>

                <div class="my-auto h-6 w-0.5 rounded-full bg-gray-200" />

                <div class="flex cursor-pointer items-center gap-2 rounded-lg px-4 py-2 text-gray-700 hover:bg-gray-100 hover:text-blue-700 hover:bg-blue-50 hover:opacity-75">
                    <svg xmlns="http://www.w3.org/2000/svg"
                         class="opacity-75"
                         fill="none"
                         width="24"
                         height="24"
                         viewBox="0 0 24 24"
                         stroke="currentColor"
                         stroke-width="2">
                        <path stroke-linecap="round"
                              stroke-linejoin="round"
                              d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                    </svg>

                    <span class="text-sm font-medium"> Logout </span>
                </div>
            </li>

            <li class="mx-auto h-0.5 w-3/5 rounded-full bg-gray-200" />

            <li>
                <a href=""
                   class="@Tw.Merge(Classes, Nav.Uri.EndsWith("/") ? ActiveRouteClasses: InactiveRouteClasses)">
                    <svg xmlns="http://www.w3.org/2000/svg"
                         viewBox="0 0 24 24" fill="none"
                         stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                         class="lucide lucide-clipboard-list size-5">
                        <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
                        <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
                        <path d="M12 11h4" />
                        <path d="M12 16h4" />
                        <path d="M8 11h.01" />
                        <path d="M8 16h.01" />
                    </svg>

                    <span class="text-sm font-medium"> Your Reported Issues </span>
                </a>
            </li>

            <li>
                <a href="local-events-and-announcements"
                    class="@Tw.Merge(Classes, Nav.Uri.EndsWith("local-events-and-announcements") ? ActiveRouteClasses: InactiveRouteClasses)">
                    <svg xmlns="http://www.w3.org/2000/svg"
                         viewBox="0 0 24 24"
                         fill="none" stroke="currentColor"
                         stroke-width="2"
                         stroke-linecap="round"
                         stroke-linejoin="round"
                         class="lucide lucide-bell-ring size-5">
                        <path d="M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9" />
                        <path d="M10.3 21a1.94 1.94 0 0 0 3.4 0" />
                        <path d="M4 2C2.8 3.7 2 5.7 2 8" />
                        <path d="M22 8c0-2.3-.8-4.3-2-6" />
                    </svg>

                    <span class="text-sm font-medium">  Local Events and Announcements </span>
                </a>
            </li>

            <li>
                <a class="@Tw.Merge(Classes, Nav.Uri.EndsWith("service-request-status") ? ActiveRouteClasses: InactiveRouteClasses, "opacity-50")">
                    <svg xmlns="http://www.w3.org/2000/svg"
                         viewBox="0 0 24 24"
                         fill="none"
                         stroke="currentColor"
                         stroke-width="2"
                         stroke-linecap="round"
                         stroke-linejoin="round"
                         class="lucide lucide-hand-platter size-5">
                        <path d="M12 3V2" />
                        <path d="M5 10a7.1 7.1 0 0 1 14 0" />
                        <path d="M4 10h16" />
                        <path d="M2 14h12a2 2 0 1 1 0 4h-2" />
                        <path d="m15.4 17.4 3.2-2.8a2 2 0 0 1 2.8 2.9l-3.6 3.3c-.7.8-1.7 1.2-2.8 1.2h-4c-1.1 0-2.1-.4-2.8-1.2L5 18" />
                        <path d="M5 14v7H2" />
                    </svg>

                    <span class="text-sm font-medium"> Service Request Status (Disabled) </span>
                </a>
            </li>

            <li class="mx-auto h-0.5 w-3/5 rounded-full bg-gray-200" />


            <li>
                <a class="flex cursor-pointer items-center gap-2 rounded-lg px-4 py-2 text-gray-700 hover:bg-gray-100 hover:text-blue-700 hover:bg-blue-50 hover:opacity-75"
                    @onclick=ShowModal>
                    <svg xmlns="http://www.w3.org/2000/svg"
                         viewBox="0 0 24 24"
                         fill="none"
                         stroke="currentColor"
                         stroke-width="2" stroke-linecap="round"
                         stroke-linejoin="round"
                         class="lucide lucide-message-square-warning opcacity-50 size-5">
                        <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z" />
                        <path d="M12 7v2" />
                        <path d="M12 13h.01" />
                    </svg>

                    <span class="text-sm font-medium"> Report An Issue </span>
                </a>
            </li>

            <li class="mx-auto max-w-max rounded bg-white p-1 px-4 py-1 opacity-75 hover:bg-gray-200" @onclick=CloseMenu>
                <span class="sr-only">Close</span>
                <svg xmlns="http://www.w3.org/2000/svg" class="size-5" viewBox="0 0 20 20" fill="currentColor">
                    <path fillRule="evenodd"
                          d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                          clipRule="evenodd" />
                </svg>
            </li>
        </ul>
    </div>
}


@code {
    string ActiveRouteClasses = "text-blue-700 bg-blue-50 hover:text-blue-700 hover:bg-blue-50 opacity-75";
    string InactiveRouteClasses = "hover:bg-gray-100 text-gray-500 hover:text-gray-700 ";
    string Classes = $"flex items-center gap-2 rounded-lg px-4 py-2 text-gray-500";


    bool IsMenuVisible { get; set; } = false;
    void ShowMenu()
    {
        IsMenuVisible = true;
    }
    void CloseMenu()
    {
        IsMenuVisible = false;
    }


    // The following functions were adapted from stackoverflow.com
    // Author: Vencovsky
    // Link: https://stackoverflow.com/questions/66111730/navigationmanager-uri-does-not-update-at-all-unless-page-is-refreshed-how-to-ge

    private void HandleLocationChanged(object sender, LocationChangedEventArgs e)
    {
        // rerender component
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        // add to the NavigationManager event
        Nav.LocationChanged += HandleLocationChanged;
    }

    public void Dispose()
    {
        // remove from the NavigationManager event
        Nav.LocationChanged -= HandleLocationChanged;
    }


    [Parameter]
    public EventCallback ShowModal { get; set; }
}
