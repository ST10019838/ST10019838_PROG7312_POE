@using TailwindMerge;
@inject TwMerge Tw;


@if (IsVisible)
{
    @if(Mode == ToastMode.Success)
    {
        <div role="alert" class="absolute bottom-4 end-4 rounded-xl border border-gray-200 bg-white p-4 shadow-xl">
            <div class="flex items-start gap-4">
                <span class="text-green-600">
                    <svg xmlns="http://www.w3.org/2000/svg"
                         fill="none"
                         viewBox="0 0 24 24"
                         stroke-width="1.5"
                         stroke="currentColor"
                         class="size-6">
                        <path stroke-linecap="round"
                              stroke-linejoin="round"
                              d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                </span>

                <div class="flex-1">
                    <strong class="block font-medium text-gray-900"> @Text </strong>
                </div>

                <button class="text-gray-500 transition hover:text-gray-600" @onclick=CloseToast>
                    <span class="sr-only">Dismiss popup</span>

                    <svg xmlns="http://www.w3.org/2000/svg"
                         fill="none"
                         viewBox="0 0 24 24"
                         stroke-width="1.5"
                         stroke="currentColor"
                         class="size-6">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
        </div>
    }
    else
    {
        <div role="alert" class="border-s-4 absolute bottom-4 end-4 rounded border-red-500 bg-red-50 p-4 shadow-xl">
            <div class="flex items-center gap-2 text-red-800">
                <svg xmlns="http://www.w3.org/2000/svg" 
                    width="24" height="24" viewBox="0 0 24 24" 
                    fill="none" stroke="currentColor" stroke-width="2" 
                    stroke-linecap="round" stroke-linejoin="round" 
                    class="lucide lucide-circle-alert size-6">
                        <circle cx="12" cy="12" r="10" />
                        <line x1="12" x2="12" y1="8" y2="12" />
                        <line x1="12" x2="12.01" y1="16" y2="16" />
                </svg>

                <div class="flex-1">
                    <strong class="block font-medium"> @Text </strong>
                </div>

                <button class="text-gray-500 transition hover:text-gray-600" @onclick=CloseToast>
                    <span class="sr-only">Dismiss popup</span>

                    <svg xmlns="http://www.w3.org/2000/svg"
                         fill="none"
                         viewBox="0 0 24 24"
                         stroke-width="1.5"
                         stroke="currentColor"
                         class="size-6">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
        </div>
    }

    <!--
    <aside class=@Tw.Merge("fixed bottom-4 end-4 z-50 flex items-center justify-center gap-4 rounded-lg bg-black px-5 py-3 text-white")>
            <div class="text-sm font-medium hover:opacity-75">
    @Text
            </div>

            <button class="bg-white/20 rounded p-1 hover:bg-white/10" @onclick=CloseToast>
                <span class="sr-only">Close</span>
                <svg xmlns="http://www.w3.org/2000/svg" class="size-4" viewBox="0 0 20 20" fill="currentColor">
                    <path fillRule="evenodd"
                          d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                          clipRule="evenodd" />
                </svg>
            </button>
        </aside>
    -->
}


@code {
    [Parameter]
    public bool IsVisible { get; set; } = false;

    [Parameter]
    public ToastMode Mode { get; set; } = ToastMode.Success;

    [Parameter]
    public string Text { get; set; }

    private void CloseToast()
    {
        IsVisible = false;
    }

    public enum ToastMode
    {
        Success,
        Failure
    }
}
