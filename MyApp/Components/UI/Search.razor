<!--
Heads up! 👋

  Plugins:
    - @tailwindcss/forms
-->
@using MyApp.Models
@using MyApp.Utils
@implements IDisposable
@inject StateContainer StateContainer
@using TailwindMerge
@inject TwMerge Tw

<div class="flex items-center justify-center gap-3 max-w-max flex-wrap sm:flex-nowrap">
    <!--Date Selector-->
    <select name="Date Selector"
            class=@Tw.Merge("w-full rounded-lg border-gray-300 text-gray-700 sm:text-sm border-gray-200 focus:border-blue-500 min-w-max")
            @bind="@SelectedDate"
            @bind:event="onchange">
        <option selected value="">Select a Date</option>

        @foreach (var item in StateContainer.GetUtilizedDates())
        {
            <option value="@item">@DateFormatter.FormatDate(item)</option>
        }
    </select>

    <!--Category Selector-->
    <select name="Category Selector"
            class=@Tw.Merge("w-full rounded-lg border-gray-300 text-gray-700 sm:text-sm border-gray-200 focus:border-blue-500 min-w-max")
            @bind="@SelectedCategory"
            @bind:event="onchange">
        <option selected value="">Select a Category</option>


        @foreach (var item in StateContainer.GetUtilizedCategories())
        {
            <option value="@item">@item.ToString()</option>
        }
    </select>

    <!--Search Icon Button-->
    <a @onclick=SearchEventsAndAnnouncemens class="hover:cursor-pointer inline-block rounded-full border border-blue-600 p-3 text-blue-600 hover:bg-blue-600 hover:text-white focus:outline-none focus:ring active:bg-blue-500">
        <span class="sr-only"> Search </span>

        <svg xmlns="http://www.w3.org/2000/svg"
             fill="none"
             viewBox="0 0 24 24"
             stroke-width="1.5"
             stroke="currentColor"
             class="size-4">
            <path stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z" />
        </svg>
    </a>

    <div class="w-1 h-5 bg-gray-300 rounded-full" />

    <!--Clear Fields Icon Button-->
    <a @onclick=ClearFields class="hover:cursor-pointer inline-block rounded-full border border-blue-600 p-3 text-blue-600 hover:bg-blue-600 hover:text-white focus:outline-none focus:ring active:bg-blue-500">
        <span class="sr-only"> Clear Fields </span>

        <svg xmlns="http://www.w3.org/2000/svg"
             viewBox="0 0 24 24" fill="none"
             stroke="currentColor" stroke-width="2"
             stroke-linecap="round" stroke-linejoin="round"
             class="lucide lucide-eraser size-4">
            <path d="m7 21-4.3-4.3c-1-1-1-2.5 0-3.4l9.6-9.6c1-1 2.5-1 3.4 0l5.6 5.6c1 1 1 2.5 0 3.4L13 21" />
            <path d="M22 21H7" />
            <path d="m5 11 9 9" />
        </svg>
    </a>

</div>

@code {
    DateOnly? SelectedDate { get; set; } = null;
    EventCategory? SelectedCategory { get; set; } = null;

    void ClearFields()
    {
        SelectedDate = null;
        SelectedCategory = null;

        OnClear();
    }

    void SearchEventsAndAnnouncemens()
    {
        OnSearch(SelectedDate, SelectedCategory);

        StateContainer.CaptureSearchForRecommendations(SelectedCategory);
    }

    [Parameter]
    public Action<DateOnly?, EventCategory?> OnSearch { get; set; }

    [Parameter]
    public Action OnClear { get; set; }



    protected override void OnInitialized()
    {
        // add to the NavigationManager event
        // Issues = Repository.GetIssues();

        StateContainer.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        StateContainer.OnChange -= StateHasChanged;
    }

    private void RefreshIssues()
    {
        StateContainer.Issues = Repository.GetIssues();
        StateHasChanged();
    }
}
